	C-Minus 的词法规则
（1） 关键字： if  else  int  return  void  while
（2） 专用符号：  +  -  *  /  <  <=  >  >=  ==  !=  =  ;  ,  (  )  [  ]  {  }  /*  */
（3） 其他标记为 ID 和 NUM ，通过下列正则表达式定义：
ID = letter letter*
NUM = digit digit*
Letter = a|..|z|A|..|Z
Digit = 0|..|9
（4） 空格由空白、换行符、制表符组成。
（5） 注释由 /*...*/ 围起来。

	C-Minus 的语法规则
C-Minus 的 BNF 语法如下：
1. program -> declaration_list
2. declaration_list ->  declaration declaration_list |  empty
3. declaration -> type_specifier ID var_declaration_end  | type_specifier ID fun_declaration //非标准但可以判断
4. var_declaration_end ->  ;
5. type_specifier -> INT  |  VOID
6. fun_declaration_end ->  ( params )  compound_stmt
7. params -> param_list  |  VOID
8. param_list -> param ,  param_list |  empty
9. param -> type_specifier ID  
10. compound_stmt -> { local_declarations statement_list }
11. local_declarations ->var_declaration local_declarations   |  empty
12. statement_list ->  statement statement_list |  empty
13. statement -> expression_stmt  |  compound_stmt  |  selection_stmt  |  iteration_stmt  |  return_stmt
14. expression_stmt -> expression ;  |  ;
15. selection_stmt -> IF ( expression ) statement  |  IF ( expression ) statement ELSE statement //非标准但可以判断
16. iteration_stmt -> WHILE ( expression ) statement
17. return_stmt -> RETURN  ;  |  RETURN expression ;//非标准但可以判断
18. expression -> var = expression ; | var = simple_expression ;
19. var -> ID 
20. simple_expression -> additive_expression relop additive_expression  |  additive_expression
21. relop -> <=  | <  |  >  |  >=  |  ==  |  !=
22. additive_expression -> additive_expression addop term  |  term
23. addop -> +  |  -
24. term -> term mulop factor  |  factor
25. mulop -> *  |  /
26. factor -> ( expression )  |  var  |  call  |  NUM
27. call -> ID ( args ) //看了半天才看懂，这是函数调用
28. args -> arg_list  |  empty
29. arg_list ->  expression , arg_list |  empty

